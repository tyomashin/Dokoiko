name: Dokoiko

# Build Configurations
configs:
  Debug: debug
  Release: release

options:
  bundleIdPrefix: com.tyomashin
  deploymentTarget:
    iOS: 13.0
  developmentLanguage: ja
  # xcodeVersion: "12.3"
  # carthageExecutablePath: mint run Carthage/Carthage carthage

# Build Settings
# ターゲットに依存しない設定
settings:
  # Common
  base:
    MARKETING_VERSION: 1.0.0
    CURRENT_PROJECT_VERSION: 1
    DEVELOPMENT_TEAM: 38BV25GUUS
    # SWIFT_VERSION: 5
    # PRODUCT_NAME: $TARGET_NAME
    # Xcode 12.3 で、以下のパラメータが欠落しているとのことなので明示的に指定（デフォルト値）
    # 参考：https://stackoverflow.com/questions/63267897/building-for-ios-simulator-but-the-linked-framework-framework-was-built
    VALIDATE_WORKSPACE: NO
  configs:
    Debug:
      GCC_PREPROCESSOR_DEFINITIONS: DEVELOP=1
      OTHER_SWIFT_FLAGS: -D DEVELOP
    Release:
      GCC_PREPROCESSOR_DEFINITIONS: "$(inherited)"
      OTHER_SWIFT_FLAGS: "$(inherited)"

targets:
  Dokoiko:
    type: application
    platform: iOS
    sources: 
      - Dokoiko
      # 自動生成するソースのパスを追加
      # 以下はサンプル
      ## Mockoloで生成するファイル
      # - path: "Foo/Generated/MockResults.swift"
      #   optional: true
      #  type: file
    settings:
      base: 
        INFOPLIST_FILE: Dokoiko/Info.plist
    preBuildScripts:
      - script: |
                if which mint >/dev/null; then
                  xcrun --sdk macosx mint run swiftformat swiftformat . --exclude Carthage,Pods --stripunusedargs closure-only --disable strongOutlets,trailingCommas
                else
                 echo "warning: SwiftFormat not installed"
                fi
        name: Run Script (Swift Format)
    postCompileScripts:
      - script: |
                if which mint >/dev/null; then
                  xcrun --sdk macosx mint run swiftlint swiftlint autocorrect --format
                  xcrun --sdk macosx mint run swiftlint swiftlint
                else
                  echo "warning: Mint not installed, download from https://github.com/yonaskolb/Mint"
                fi
        name: Run Script (SwiftLint)
      - script: |
                if which mint >/dev/null; then
                  xcrun --sdk macosx mint run swiftgen
                else
                  echo "failed SwiftGen Run Script"
                fi
        name: Run Script (SwiftGen)
    # 依存するライブラリなどを指定
    dependencies:
      - framework: Carthage/Build/RxBlocking.xcframework
      - framework: Carthage/Build/RxSwift.xcframework
      - framework: Carthage/Build/RxCocoa.xcframework
      - framework: Carthage/Build/RxRelay.xcframework
      - framework: Carthage/Build/Alamofire.xcframework
      - framework: Carthage/Build/RxTest.xcframework
      - framework: Carthage/Build/OHHTTPStubs.xcframework

  DokoikoTests:
    type: bundle.unit-test
    platform: iOS
    sources: 
      - DokoikoTests
      # リソースを使用する場合はここにパスを追加する
      # memo: 
      # ターゲット内に一つもリソースが存在しない場合、Build Phases の Copy Bundle Resources セクションが作成されず、
      # swift ファイル以外のリソースの Target Membership にチェックを入れられなくなる。
      # - Dokoiko/Resources
      # - Dokoiko
    settings:
      base: 
        INFOPLIST_FILE: DokoikoTests/Info.plist
    dependencies:
      - target: Dokoiko

  DokoikoUITests:
    type: bundle.ui-testing
    platform: iOS
    sources: 
      - DokoikoUITests
      # - Dokoiko
    settings:
      base: 
        INFOPLIST_FILE: DokoikoUITests/Info.plist
    dependencies:
      - target: Dokoiko

# スキームの設定。一旦参考サイトをコピペで記載している
# https://qiita.com/uhooi/items/16a870eaae24b46103fb
schemes:
  Dokoiko:
    build:
      targets:
        Dokoiko: all
    run:
      config: Debug
    test:
      config: Debug
      gatherCoverageData: true
      coverageTargets:
        - Dokoiko
      targets:
        - name: DokoikoTests
          parallelizable: true
          randomExecutionOrder: true
        - name: DokoikoUITests
          parallelizable: true
          randomExecutionOrder: true
    profile:
      config: Release
    analyze:
      config: Debug
    archive:
      config: Release